# -*- coding: utf-8 -*-
"""DIABETES PREDICTION -Project : 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EFRp6AooeSpSNgelus0iB7MY1YBXfeA8
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

dataset=pd.read_csv('/content/diabetes.csv')
dataset.head()

dataset.isnull().sum()

dataset.describe()

dataset['Outcome'].value_counts()

X=dataset.drop(columns='Outcome' ,axis=1)
Y=dataset['Outcome']

dataset.groupby('Outcome').mean()

stan=StandardScaler()
stan.fit(X)

standard_data=stan.transform(X)
X=standard_data

print(standard_data)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

model=svm.SVC(kernel='linear')

model.fit(X_train,Y_train)

predicting=model.predict(X_train)
eval=accuracy_score(predicting,Y_train)

print(eval)

predicting2=model.predict(X_test)
eval2=accuracy_score(predicting2,Y_test)

print(eval2)

new_data=(6,148,72,35,0,33.6,0.627,50)
new_data=np.asarray(new_data)
new_data=new_data.reshape(1,-1)
new_data=stan.transform(new_data)

predict1=model.predict(new_data)
if(predict1[0]==1):
  print("DIABETES")
else:
  print("You are Healthy")

"""Saving for streamlit"""

import pickle

filename='trained_diabetesmodel.sav'
pickle.dump(model,open(filename,'wb'))

#loading
loaded_model=pickle.load(open('/content/trained_diabetesmodel.sav','rb'))

new_data=(0,118,84,47,230,45.8,0.551,31)
new_data=np.asarray(new_data)
new_data=new_data.reshape(1,-1)
new_data=stan.transform(new_data)


predict1=loaded_model.predict(new_data)
if(predict1[0]==1):
  print("DIABETES")
else:
  print("You are Healthy")

for col in dataset.columns:
  print(col)

